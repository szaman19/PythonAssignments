{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 AndaleMono;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 \cb1 #Zaman, M.Shehtab\
#szaman5@binghamton.edu\
#Lab Section: B55\
#CA: Nuri Ra\
#Assignment 6: Problem 2\
'''\
\
Analysis\
\
This program simulates a lucky sevens game where it asks for the starting bet\
and then simulates throwing dice and calculates when the pot reaches the\
highest amount. \
\
Output to monitor:\
  turn(int) \
  diceValue(int)\
  moneyLeft(int)\
  maxTurn(int) - The turn in which player had the most money\
  maxOutput(int) - The most money the player had during the game\
  \
Input from keyboard:\
  potSizeIntErrorChecked - The starting bet \
\
Tasks allocated to Functions:\
  throwDice() - Simulates throwing two dice and returns their sum \
  isMax(currentMax,newVal) - Checks if newVal is greater than currentMax\
  runGame(startingMoney,turnNum,currentMax,currentMaxTurn) - \
     given startingMoney, turnNum, currentMax, currentMaxTurn, calls\
     throwDice() and changes startingMoney, turnNum, currentMax, \
     currentMaxTurn accordingly.  \
  errorCheck(stringInput) - given stringInput, checks if it is an int >0\
  horizontalPrintLine() - Creates a horizontal line on output \
\
'''\
#Imports \
import random\
\
#Global Constants \
LINE_LENGTH = 19\
DICE_MIN = 1\
DICE_MAX = 7\
LUCKY_SEVEN = 7\
LUCKY_SEVEN_PRIZE = 4\
INCREMENT = 1\
\
INDEX_OF_TURN = 0\
INDEX_OF_DICE_VALUE = 1\
INDEX_OF_MONEY_LEFT=2\
INDEX_OF_MAX_TURN = 3\
INDEX_OF_MAXIMUM = 4\
\
#No params\
#Simulates throwing two dice and returns their sum\
#Returns int \
def throwDice():\
  dice1 = random.randrange(DICE_MIN,DICE_MAX)\
  dice2 = random.randrange(DICE_MIN,DICE_MAX)\
  return dice1 + dice2\
\
#Two Params, (int,int)\
#Checks if newVal > currentMax\
#Returns bool\
def isMax(currentMax,newVal):\
  return newVal > currentMax\
\
#Four Params (int,int,int,int)\
#given the inputs, simulates on turn of lucky sevens. Calls throwdice() and \
#if the value is 7, increases moneyLeft and checks isMax(), otherwise\
#decreases moneyLeft and increments turns\
#Returns a list of ints \
def runGame(startingMoney, turnNum,currentMax,currentMaxTurn):\
  moneyLeft = startingMoney\
  turn = turnNum\
  maximum = currentMax\
  maxTurn = currentMaxTurn\
\
  #Simulates throwing two dice\
  diceValue = throwDice()\
  if(diceValue == LUCKY_SEVEN):\
    moneyLeft += LUCKY_SEVEN_PRIZE\
    turn += INCREMENT\
    if isMax(maximum,moneyLeft):\
      maximum = moneyLeft\
      maxTurn = turn    \
    #print('\{0:5d\} \{1:4d\} \{2:7d\}'.format(turn,diceValue,moneyLeft))\
  else:\
    moneyLeft -= INCREMENT\
    turn +=INCREMENT\
    #print('\{0:5d\} \{1:4d\} \{2:7d\}'.format(turn,diceValue,moneyLeft))\
  return [turn,diceValue,moneyLeft,maxTurn,maximum]\
\
#One Param (string)\
#Checks if string can be  converted to int \
#Returns int or False \
def errorCheck(stringInput):\
  #errorMessage = ""\
  try:\
    intResult = int(stringInput)\
  except ValueError:\
      intResult = False\
  return intResult\
#No Params\
#Creates a string with give LINE_LENGTH\
#Returns string\
def horizontalPrintLine():\
  line = ""\
  for dash in range(0,LINE_LENGTH):\
    line +="-"\
  return line\
\
#Asks user for number of days to calculate salary for and prints out table\
def main():\
  inputMessage = "Please place your bet in whole dollars: OR press <Enter> to quit:  "\
  errorMessage = "This program only takes in whole number values. Please try again"\
  \
  #Priming read \
  potSizeStr = input(inputMessage)\
  \
  #Continuation Loop\
  while(potSizeStr):\
    \
    #Validation Loop \
    potSizeIntErrorChecked = errorCheck(potSizeStr)\
    while not potSizeIntErrorChecked:\
      print(errorMessage)\
      potSizeStr = input(inputMessage)\
      potSizeIntErrorChecked = errorCheck(potSizeStr)\
    \
    #Header print \
    print('\{0:5\} \{1:5\} \{2:8\}'.format("Roll","Value","Dollars"))\
    print(horizontalPrintLine())\
    \
    #Initial Stage \
    maximum = potSizeIntErrorChecked\
    maxTurn = 0\
    turn = 0\
    moneyLeft = potSizeIntErrorChecked\
    \
    #Simulation \
    while moneyLeft > 0:\
      resultList = runGame(moneyLeft,turn,maximum,maxTurn)\
      turn = resultList[INDEX_OF_TURN]\
      diceValue = resultList[INDEX_OF_DICE_VALUE]\
      moneyLeft =resultList[INDEX_OF_MONEY_LEFT]\
      maxTurn = resultList[INDEX_OF_MAX_TURN]\
      maximum = resultList[INDEX_OF_MAXIMUM]\
      \
      print('\{0:5d\} \{1:4d\} \{2:7d\}'.format(turn,diceValue,moneyLeft))\
    maxOutput = '$'+str(maximum)\
    \
    #Final Output\
    print("You became broke after ",turn," rolls")\
    print("You should have quit after",maxTurn," rolls when you had",maxOutput,"\\n")				\
    #<--End of simulation\
\
    #Continuation read \
    potSizeStr = input(inputMessage)\
\
main()\
\
\
salaryCalculator.py output\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f1\fs22 \cf0 \CocoaLigature0 Please place your bet in whole dollars: OR press <Enter> to quit:  40\
Roll  Value Dollars \
-------------------\
    1    7      44\
    2    8      43\
    3   12      42\
    4    7      46\
    5   10      45\
    6    4      44\
    7    6      43\
    8   11      42\
    9    7      46\
   10    4      45\
   11    9      44\
   12    5      43\
   13    7      47\
   14    3      46\
   15    6      45\
   16    9      44\
   17    8      43\
   18   10      42\
   19    7      46\
   20    6      45\
   21   10      44\
   22    8      43\
   23   10      42\
   24    7      46\
   25    9      45\
   26    3      44\
   27    5      43\
   28    6      42\
   29    3      41\
   30    6      40\
   31   11      39\
   32    9      38\
   33   11      37\
   34    6      36\
   35    9      35\
   36   12      34\
   37    8      33\
   38   10      32\
   39    3      31\
   40    8      30\
   41   10      29\
   42    9      28\
   43    6      27\
   44    4      26\
   45   10      25\
   46   10      24\
   47    2      23\
   48    7      27\
   49    5      26\
   50   10      25\
   51    9      24\
   52    7      28\
   53    5      27\
   54    5      26\
   55    9      25\
   56    5      24\
   57    4      23\
   58    7      27\
   59    6      26\
   60    4      25\
   61    7      29\
   62    9      28\
   63    5      27\
   64    5      26\
   65   10      25\
   66   10      24\
   67    8      23\
   68    4      22\
   69   10      21\
   70   10      20\
   71    7      24\
   72   10      23\
   73   11      22\
   74    8      21\
   75    6      20\
   76    8      19\
   77   10      18\
   78   10      17\
   79    8      16\
   80    4      15\
   81    4      14\
   82    3      13\
   83    5      12\
   84    7      16\
   85    8      15\
   86    8      14\
   87    7      18\
   88    3      17\
   89    6      16\
   90    8      15\
   91   10      14\
   92   11      13\
   93    5      12\
   94    5      11\
   95    3      10\
   96   10       9\
   97    7      13\
   98   10      12\
   99   10      11\
  100    4      10\
  101   10       9\
  102   10       8\
  103    7      12\
  104    9      11\
  105    4      10\
  106    6       9\
  107    4       8\
  108    3       7\
  109   10       6\
  110    3       5\
  111   11       4\
  112    5       3\
  113    5       2\
  114    4       1\
  115    7       5\
  116    7       9\
  117    4       8\
  118    8       7\
  119    3       6\
  120    5       5\
  121   12       4\
  122   10       3\
  123    8       2\
  124    8       1\
  125    7       5\
  126    3       4\
  127    9       3\
  128    4       2\
  129    8       1\
  130    6       0\
You became broke after  130  rolls\
You should have quit after 13  rolls when you had $47 \
\
Please place your bet in whole dollars: OR press <Enter> to quit:  5\
Roll  Value Dollars \
-------------------\
    1    7       9\
    2    7      13\
    3    7      17\
    4   10      16\
    5    5      15\
    6    5      14\
    7    5      13\
    8    9      12\
    9    5      11\
   10   12      10\
   11   11       9\
   12    8       8\
   13   11       7\
   14    6       6\
   15   10       5\
   16   10       4\
   17    5       3\
   18   10       2\
   19    8       1\
   20    4       0\
You became broke after  20  rolls\
You should have quit after 3  rolls when you had $17 \
\
Please place your bet in whole dollars: OR press <Enter> to quit:  y\
This program only takes in whole number values. Please try again\
Please place your bet in whole dollars: OR press <Enter> to quit:  3\
Roll  Value Dollars \
-------------------\
    1    7       7\
    2    8       6\
    3    4       5\
    4    8       4\
    5    8       3\
    6    6       2\
    7    9       1\
    8    7       5\
    9    8       4\
   10    5       3\
   11    7       7\
   12   10       6\
   13    5       5\
   14    7       9\
   15    7      13\
   16   10      12\
   17   10      11\
   18   10      10\
   19    2       9\
   20    8       8\
   21    4       7\
   22    8       6\
   23    6       5\
   24    7       9\
   25   10       8\
   26    5       7\
   27    8       6\
   28    3       5\
   29    8       4\
   30    7       8\
   31    5       7\
   32   11       6\
   33    9       5\
   34    6       4\
   35    4       3\
   36    6       2\
   37   10       1\
   38    5       0\
You became broke after  38  rolls\
You should have quit after 15  rolls when you had $13 \
\
Please place your bet in whole dollars: OR press <Enter> to quit: \
}